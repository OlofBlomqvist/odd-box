/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SiteImport } from './routes/site'
import { Route as LogsImport } from './routes/logs'
import { Route as LoginImport } from './routes/login'
import { Route as IndexImport } from './routes/index'

// Create Virtual Routes

const SettingsLazyImport = createFileRoute('/settings')()
const NewSiteLazyImport = createFileRoute('/new-site')()
const NewProcessLazyImport = createFileRoute('/new-process')()
const NewDirserverLazyImport = createFileRoute('/new-dirserver')()

// Create/Update Routes

const SettingsLazyRoute = SettingsLazyImport.update({
  path: '/settings',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/settings.lazy').then((d) => d.Route))

const NewSiteLazyRoute = NewSiteLazyImport.update({
  path: '/new-site',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/new-site.lazy').then((d) => d.Route))

const NewProcessLazyRoute = NewProcessLazyImport.update({
  path: '/new-process',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/new-process.lazy').then((d) => d.Route))

const NewDirserverLazyRoute = NewDirserverLazyImport.update({
  path: '/new-dirserver',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/new-dirserver.lazy').then((d) => d.Route))

const SiteRoute = SiteImport.update({
  path: '/site',
  getParentRoute: () => rootRoute,
} as any)

const LogsRoute = LogsImport.update({
  path: '/logs',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/logs': {
      id: '/logs'
      path: '/logs'
      fullPath: '/logs'
      preLoaderRoute: typeof LogsImport
      parentRoute: typeof rootRoute
    }
    '/site': {
      id: '/site'
      path: '/site'
      fullPath: '/site'
      preLoaderRoute: typeof SiteImport
      parentRoute: typeof rootRoute
    }
    '/new-dirserver': {
      id: '/new-dirserver'
      path: '/new-dirserver'
      fullPath: '/new-dirserver'
      preLoaderRoute: typeof NewDirserverLazyImport
      parentRoute: typeof rootRoute
    }
    '/new-process': {
      id: '/new-process'
      path: '/new-process'
      fullPath: '/new-process'
      preLoaderRoute: typeof NewProcessLazyImport
      parentRoute: typeof rootRoute
    }
    '/new-site': {
      id: '/new-site'
      path: '/new-site'
      fullPath: '/new-site'
      preLoaderRoute: typeof NewSiteLazyImport
      parentRoute: typeof rootRoute
    }
    '/settings': {
      id: '/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  LoginRoute,
  LogsRoute,
  SiteRoute,
  NewDirserverLazyRoute,
  NewProcessLazyRoute,
  NewSiteLazyRoute,
  SettingsLazyRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/login",
        "/logs",
        "/site",
        "/new-dirserver",
        "/new-process",
        "/new-site",
        "/settings"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/logs": {
      "filePath": "logs.tsx"
    },
    "/site": {
      "filePath": "site.tsx"
    },
    "/new-dirserver": {
      "filePath": "new-dirserver.lazy.tsx"
    },
    "/new-process": {
      "filePath": "new-process.lazy.tsx"
    },
    "/new-site": {
      "filePath": "new-site.lazy.tsx"
    },
    "/settings": {
      "filePath": "settings.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
