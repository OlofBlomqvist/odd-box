import{A as C,u as P,a as V,b as E,r as l,e as x,j as t,C as A,c as B,d as L,f as D,g as I,S as u,h as n,i as s,I as o,L as R,k,_ as F,l as U}from"./index-Cox9BY69.js";const $=()=>{let i=window.location.protocol+"//"+window.location.hostname;window.location.port&&(i=`${i}:${window.location.port}`);const a=i,p=new C({baseUrl:a}),d=P();return{updateSettings:V({mutationKey:["update-settings"],mutationFn:p.api.saveSettings,onSettled:()=>{d.invalidateQueries({queryKey:["settings"]})}})}},q=()=>{const{updateSettings:i}=$(),{data:a}=E(),[p,d]=l.useState(a.ip),[g,v]=l.useState(a.lets_encrypt_account_email),[_,S]=l.useState(a.root_dir),[m,j]=l.useState(a.http_port),[h,w]=l.useState(x(a.env_vars??[])),[b,y]=l.useState(a.tls_port),[T,N]=l.useState(a.port_range_start),r=(e,c)=>{let f=Array.isArray(c)||isNaN(c)===!1?c:`${c}`;F.promise(i.mutateAsync({...a,[e]:f}),{loading:"Updating settings..",success:"Settings updated!",error:"Failed to update settings"})};return t.jsx("main",{className:"grid flex-1 items-start gap-4 sm:py-0 md:gap-8 max-w-[900px]",children:t.jsxs(A,{className:"mb-8",children:[t.jsxs(B,{children:[t.jsx(L,{children:"Settings"}),t.jsx(D,{children:"General settings that affect all sites"})]}),t.jsxs(I,{children:[t.jsx(u,{marginTop:"0px",noTopSeparator:!0,noBottomSeparator:!0,children:t.jsx(n,{title:"Root directory",subTitle:s.root_dir,children:t.jsx(o,{withSaveButton:!0,onSave:e=>{r("root_dir",e)},type:"text",originalValue:a.root_dir,value:_,onChange:e=>S(e.target.value)})})}),t.jsxs(u,{children:[t.jsx(n,{title:"HTTP Port",subTitle:s.default_http_port,defaultValue:"8080",children:t.jsx(o,{value:m,withSaveButton:!0,originalValue:a.http_port,onSave:e=>{r("http_port",e)},onChange:e=>{isNaN(Number(e.target.value))||j(Number(e.target.value))}})}),t.jsx(n,{title:"TLS Port",subTitle:s.default_tls_port,defaultValue:"4343",children:t.jsx(o,{value:b,originalValue:a.tls_port,withSaveButton:!0,onSave:e=>{r("tls_port",e)},onChange:e=>{isNaN(Number(e.target.value))||y(Number(e.target.value))}})}),t.jsx(n,{title:"IP Address",subTitle:s.proxy_ip,children:t.jsx(o,{value:p,originalValue:a.ip,withSaveButton:!0,onSave:e=>{r("ip",e)},onChange:e=>d(e.target.value)})})]}),t.jsxs(u,{noTopSeparator:!0,children:[t.jsx(n,{title:"Port range start",subTitle:s.port_range_start,children:t.jsx(o,{value:T,originalValue:a.port_range_start,withSaveButton:!0,onSave:e=>r("port_range_start",e),onChange:e=>{isNaN(Number(e.target.value))||N(Number(e.target.value))}})}),t.jsx(n,{title:"Use ALPN",labelFor:"alpn",subTitle:s.use_alpn,rowOnly:!0,children:t.jsx(o,{type:"checkbox",id:"alpn",checked:a.alpn,onChange:()=>r("alpn",!a.alpn),style:{width:"20px",height:"20px"}})})]}),t.jsx(u,{noTopSeparator:!0,children:t.jsx(n,{title:"Autostart",rowOnly:!0,subTitle:s.default_auto_start,labelFor:"autostart",children:t.jsx(o,{id:"autostart",type:"checkbox",checked:a.auto_start,onChange:()=>r("auto_start",!a.auto_start),style:{width:"20px",height:"20px"}})})}),t.jsxs(u,{noTopSeparator:!0,children:[t.jsx(n,{title:"Log level",subTitle:s.log_level,children:t.jsxs("select",{className:"text-black rounded pl-3 pr-3",value:a.log_level,onChange:e=>{r("log_level",e.target.value)},name:"loglevel",style:{height:"32px",width:"100%"},children:[t.jsx("option",{value:"Trace",children:"Trace"}),t.jsx("option",{value:"Debug",children:"Debug"}),t.jsx("option",{value:"Info",children:"Info"}),t.jsx("option",{value:"Warn",children:"Warn"}),t.jsx("option",{value:"Error",children:"Error"})]})}),t.jsx(n,{title:"Log format",subTitle:s.default_log_format,children:t.jsxs("select",{className:"text-black rounded pl-3 pr-3",value:a.default_log_format??R.Standard,onChange:e=>{r("default_log_format",e.target.value)},name:"log_format",style:{height:"32px",width:"100%"},children:[t.jsx("option",{value:"Standard",children:"Standard"}),t.jsx("option",{value:"Dotnet",children:"Dotnet"})]})})]}),t.jsx(u,{marginTop:"0px",noTopSeparator:!0,noBottomSeparator:!0,children:t.jsx(n,{title:"Lets Encrypt account email",subTitle:s.lets_encrypt_account_email,children:t.jsx(o,{withSaveButton:!0,onSave:e=>{r("lets_encrypt_account_email",e)},type:"text",originalValue:a.lets_encrypt_account_email,value:g,onChange:e=>v(e.target.value)})})}),t.jsx(n,{vertical:!0,title:"Environment variables",subTitle:"Semicolon separated list of environment variables to be set on oddbox start.",children:t.jsx(o,{withSaveButton:!0,disableSaveButton:i.isPending,originalValue:x(a.env_vars??[]),value:h,onSave:()=>{r("env_vars",k(h))},onChange:e=>{w(e.target.value)}})})]})]})})},K=U("/settings")({component:q});export{K as Route};
